platform: linux
image_resource:
  type: registry-image
  source:
    repository: hashicorp/terraform
    tag: 1.0.4
    username: ((docker-hub-username))
    password: ((docker-hub-password))
params:
  DEPLOYER_ROLE_ARN: ((deployer-role-arn-non-prod))
  DEPLOY_ENVIRONMENT: build
  NOTIFY_API_KEY: ((build-notify-api-key))
  PASSWORD_PEPPER: ((build-password-pepper))
  STATE_BUCKET: digital-identity-dev-tfstate
  TEST_CLIENT_EMAIL_ALLOWLIST: ((test-client-email-allowlist))
inputs:
  - name: api-terraform-src
  - name: account-migration-release
outputs:
  - name: terraform-outputs
run:
  path: /bin/sh
  args:
    - -euc
    - |
      cd "api-terraform-src/ci/terraform/shared"
      terraform init -input=false \
        -backend-config "role_arn=${DEPLOYER_ROLE_ARN}" \
        -backend-config "bucket=${STATE_BUCKET}" \
        -backend-config "key=${DEPLOY_ENVIRONMENT}-shared-terraform.tfstate" \
        -backend-config "encrypt=true" \
        -backend-config "region=eu-west-2"

      terraform apply -auto-approve \
        -var "deployer_role_arn=${DEPLOYER_ROLE_ARN}" \
        -var "environment=${DEPLOY_ENVIRONMENT}" \
        -var 'logging_endpoint_enabled=true' \
        -var 'logging_endpoint_arn=arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod' \
        -var "test_client_email_allowlist=${TEST_CLIENT_EMAIL_ALLOWLIST}" \
        -var 'account_migration_lambda_zip_file=../../../../account-migration-release/account-migrations.zip' \
        -var "password_pepper=${PASSWORD_PEPPER}" \
        -var "common_state_bucket=${STATE_BUCKET}" \
        -var-file ${DEPLOY_ENVIRONMENT}-stub-clients.tfvars \
        -var-file ${DEPLOY_ENVIRONMENT}-sizing.tfvars \

      terraform output --json > ../../../../terraform-outputs/${DEPLOY_ENVIRONMENT}-shared-terraform-outputs.json
