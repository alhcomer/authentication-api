plugins {
    id "java"
    id "jacoco"
}

group "uk.gov.di"
version "unspecified"

dependencies {
    testImplementation configurations.bouncycastle,
            configurations.apache,
            configurations.nimbus,
            configurations.glassfish,
            configurations.gson,
            configurations.tests,
            configurations.sqs,
            configurations.dynamodb,
            configurations.lambda,
            configurations.lettuce,
            configurations.libphonenumber

    testImplementation project(":shared"), noXray
    testImplementation project(":account-management-api"), noXray
    testImplementation project(":shared-test"), noXray
    testImplementation("au.com.dius.pact.provider:junit5:4.1.7")

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${dependencyVersions.junit}"
}

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getGitBranch = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--abbrev-ref', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

//CanIDeployCheck {
//    def stdout = new ByteArrayOutputStream()
//    exec {
//        commandLine 'pact-broker', 'can-i-deploy','--pacticipant' , '\"Account Management API\"', '--version', '\"$(git rev-parse --short HEAD)-1\"' , '--broker-base-url=http://localhost:8080', '--broker-username', 'test', '--broker-password', 'test'
//        standardOutput = stdout
//    }
//    return stdout.toString().trim()
//
//}

test {
    useJUnitPlatform()
    filter {
        includeTestsMatching "*"
    }
    systemProperty 'pact.provider.version', getGitHash()
    systemProperty 'pact.provider.tag', getGitBranch()
    systemProperty 'pact.verifier.publishResults', 'true'
    environment "AUDIT_SIGNING_KEY_ALIAS", "alias/local-audit-payload-signing-key-alias"
    environment "AWS_ACCESS_KEY_ID", "mock-access-key"
    environment "AWS_REGION", "eu-west-2"
    environment "AWS_SECRET_ACCESS_KEY", "mock-secret-key "
    environment "OIDC_API_BASE_URL", "http://localhost"
    environment "DYNAMO_ENDPOINT", "http://localhost:8000"
    environment "ENVIRONMENT", "local"
    environment "HEADERS_CASE_INSENSITIVE", "true"
    environment "LOCALSTACK_ENDPOINT", "http://localhost:45678"
    environment "REDIS_KEY", "account-management"
    environment "SQS_ENDPOINT", "http://localhost:45678"
    environment "TRACING_ENABLED", "false"
    environment "INTERNAl_SECTOR_URI", "https://test.account.gov.uk"
    environment "pact.verifier.publishResults", "true"

    testLogging {
        showStandardStreams = false
    }

    doLast {
        tasks.getByName("jacocoTestReport").sourceDirectories.from(
                project(":account-management-api").sourceSets.main.java,
                project(":shared").sourceSets.main.java)

        tasks.getByName("jacocoTestReport").classDirectories.from(
                project(":account-management-api").sourceSets.main.output,
                project(":shared").sourceSets.main.output)
    }
    dependsOn ":composeUp"
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
